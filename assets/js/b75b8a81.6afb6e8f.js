"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9149],{3774:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>c});var t=n(5893),o=n(1151);const s={title:"Under the hood",sidebar_position:32},i="Under the hood",r={id:"under-the-hood",title:"Under the hood",description:"This page is for people who are already familiar with the Scala/JVM ecosystem.",source:"@site/docs/under-the-hood.md",sourceDirName:".",slug:"/under-the-hood",permalink:"/docs/under-the-hood",draft:!1,unlisted:!1,editUrl:"https://github.com/Virtuslab/scala-cli/edit/main/website/docs/under-the-hood.md",tags:[],version:"current",sidebarPosition:32,frontMatter:{title:"Under the hood",sidebar_position:32},sidebar:"tutorialSidebar",previous:{title:"Commands",permalink:"/docs/reference/scala-command/commands"},next:{title:"Release notes",permalink:"/docs/release_notes"}},l={},c=[{value:"Caching and incrementality",id:"caching-and-incrementality",level:3},{value:"Bloop and Coursier",id:"bloop-and-coursier",level:3},{value:"scala-cli&#39;s JVM",id:"scala-clis-jvm",level:3}];function d(e){const a={a:"a",admonition:"admonition",code:"code",h1:"h1",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(a.admonition,{type:"note",children:[(0,t.jsx)(a.p,{children:"This page is for people who are already familiar with the Scala/JVM ecosystem."}),(0,t.jsxs)(a.p,{children:["If you just want to learn Scala CLI, head out to the ",(0,t.jsx)(a.a,{href:"/docs/commands/basics",children:"Commands section"}),"."]})]}),"\n",(0,t.jsx)(a.h1,{id:"under-the-hood",children:"Under the hood"}),"\n",(0,t.jsxs)(a.p,{children:["Scala CLI consists of a native executable, generated by ",(0,t.jsx)(a.a,{href:"https://www.graalvm.org",children:"GraalVM"})," ",(0,t.jsx)(a.a,{href:"https://www.graalvm.org/reference-manual/native-image",children:"Native Image"}),".\nIt runs fine on Linux and macOS with no prior requirements, and\nonly requires the ",(0,t.jsx)(a.a,{href:"https://www.microsoft.com/en-us/download/details.aspx?id=48145",children:"Visual C++ Redistributable Runtime"}),"\non Windows.\nNative Image lets us build Scala CLI as a native image for each platform, and lets Scala CLI be responsive, as a command line application should be."]}),"\n",(0,t.jsx)(a.h3,{id:"caching-and-incrementality",children:"Caching and incrementality"}),"\n",(0,t.jsx)(a.p,{children:"Since most of the tasks require compilation or dependency resolution under the hood, Scala CLI heavily uses caches and incrementality under the hood to provide output as quickly as possible."}),"\n",(0,t.jsxs)(a.p,{children:["But note that incremental compilation and caching are not perfect.\nIn some cases, when there's a compilation problem and you don't think it's a problem with the code, it may be the stale state of the project - cleaning the project state might help.\nFor this reason Scala CLI has the ",(0,t.jsx)(a.a,{href:"/docs/commands/clean",children:"clean"})," command, which invalidates local caches and forces the next compilation to be a total rebuild from a clean slate."]}),"\n",(0,t.jsxs)(a.p,{children:["We provide a more in-depth overview about how caching works in the ",(0,t.jsx)(a.a,{href:"/docs/guides/internals",children:"Scala CLI internals guide"}),"."]}),"\n",(0,t.jsx)(a.h3,{id:"bloop-and-coursier",children:"Bloop and Coursier"}),"\n",(0,t.jsxs)(a.p,{children:["To ensure the quickest compilation, Scala CLI uses and manages the ",(0,t.jsx)(a.a,{href:"https://scalacenter.github.io/bloop/",children:"Bloop"})," compilation server.\nWe have a ",(0,t.jsx)(a.a,{href:"/docs/reference/bloop",children:"detailed guide"})," that describes how Scala CLI interacts with the local Bloop server.\nThe main point to know is that Scala CLI takes care of fetching and starting Bloop if needed, so you don't have to worry about it."]}),"\n",(0,t.jsxs)(a.p,{children:["Scala CLI uses ",(0,t.jsx)(a.a,{href:"https://get-coursier.io/",children:"Coursier"})," to manage dependencies.\nIt automatically downloads and unpacks a JVM if none is installed on your system, so that all its commands work fine even if a JVM isn't already installed.\nScala CLI shares Coursier caches with other tools like ",(0,t.jsx)(a.a,{href:"https://www.scala-sbt.org/",children:"sbt"}),", ",(0,t.jsx)(a.a,{href:"https://github.com/com-lihaoyi/mill",children:"Mill"}),", or ",(0,t.jsx)(a.a,{href:"https://scalameta.org/metals/",children:"Metals"}),"."]}),"\n",(0,t.jsx)(a.h3,{id:"scala-clis-jvm",children:"scala-cli's JVM"}),"\n",(0,t.jsxs)(a.p,{children:["Scala CLI is a JVM application. Although by default it is distributed as a GraalVM native image, it is still possible to set Java properties.\nIn order set them, the ",(0,t.jsx)(a.code,{children:"-D"})," command-line flags must be placed as the first options to scala-cli, for example:"]}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-bash",children:"scala-cli -Dfoo1=bar1 -Dfoo2=bar2 run ...\n"})}),"\n",(0,t.jsx)(a.admonition,{type:"note",children:(0,t.jsxs)(a.ul,{children:["\n",(0,t.jsxs)(a.li,{children:[(0,t.jsx)(a.code,{children:"scala-cli run . -Dfoo=bar"})," would pass the java property into your Scala app"]}),"\n",(0,t.jsxs)(a.li,{children:[(0,t.jsx)(a.code,{children:"scala-cli -Dfoo=bar run ."})," would pass the java property into ",(0,t.jsx)(a.code,{children:"scala-cli"}),"."]}),"\n"]})}),"\n",(0,t.jsxs)(a.p,{children:["The Scala CLI can also load Java properties from the ",(0,t.jsx)(a.code,{children:".scala-jvmopts"})," file present in the current working\ndirectory and import these Java properties into Scala CLI. Any java options in the ",(0,t.jsx)(a.code,{children:".scala-jvmopts"})," that are not\nrecognizable as Java properties will be ignored."]}),"\n",(0,t.jsxs)(a.p,{children:["The example below shows that the Java properties ",(0,t.jsx)(a.code,{children:"foo1"})," and ",(0,t.jsx)(a.code,{children:"foo2"})," from the ",(0,t.jsx)(a.code,{children:".scala-jvmopts"})," file will be passed\ninto the Scala CLI:"]}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-bash",metastring:"ignore",children:"$ cat .scala-jvmopts\n-Dfoo1=bar1 \n-Dfoo2=bar2\n$ scala-cli run ...\n"})}),"\n",(0,t.jsxs)(a.p,{children:["You can set Java properties globally for the Scala CLI launcher using the ",(0,t.jsx)(a.code,{children:"config"})," command.\nThe example below shows how to set the Java properties ",(0,t.jsx)(a.code,{children:"-Djavax.net.ssl.trustStore=cacerts"})," and ",(0,t.jsx)(a.code,{children:"-Dfoo=bar2"}),":"]}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-bash",children:"scala-cli config java.properties Djavax.net.ssl.trustStore=cacerts Dfoo=bar2\n"})}),"\n",(0,t.jsx)(a.admonition,{type:"note",children:(0,t.jsxs)(a.p,{children:["Please note that if you need to modify the Java properties, you have to redefine all of them. It's not possible\nto update just a single value via the ",(0,t.jsx)(a.code,{children:"config"})," command. Each update effectively replaces the entire Java properties\nlist."]})})]})}function h(e={}){const{wrapper:a}={...(0,o.a)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},1151:(e,a,n)=>{n.d(a,{Z:()=>r,a:()=>i});var t=n(7294);const o={},s=t.createContext(o);function i(e){const a=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function r(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(s.Provider,{value:a},e.children)}}}]);