"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3989],{8811:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>l});var i=n(5893),t=n(1151);const o={title:"Testing your code with different Java versions",sidebar_position:3},s=void 0,r={id:"cookbooks/scala-jvm",title:"Testing your code with different Java versions",description:"You can use Scala CLI to test your code compatibility with various versions of java, with a key point being that manual installation of a JDK/SDK is not required(!).",source:"@site/docs/cookbooks/scala-jvm.md",sourceDirName:"cookbooks",slug:"/cookbooks/scala-jvm",permalink:"/docs/cookbooks/scala-jvm",draft:!1,unlisted:!1,editUrl:"https://github.com/Virtuslab/scala-cli/edit/main/website/docs/cookbooks/scala-jvm.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Testing your code with different Java versions",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Picking the Scala version with Scala CLI",permalink:"/docs/cookbooks/scala-versions"},next:{title:"Debugging with Scala CLI",permalink:"/docs/cookbooks/debugging"}},c={},l=[];function d(e){const a={code:"code",p:"p",pre:"pre",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(a.p,{children:["You can use Scala CLI to test your code compatibility with various versions of ",(0,i.jsx)(a.code,{children:"java"}),", with a key point being that manual installation of a JDK/SDK is not required(!).\nScala CLI automatically downloads the Java version you specify."]}),"\n",(0,i.jsxs)(a.p,{children:["As an example, the following snippet uses the new method ",(0,i.jsx)(a.code,{children:"Files.writeString"})," from Java 11:"]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-scala",metastring:"title=Main.scala",children:'import java.nio.file.Files\nimport java.nio.file.Paths\n\nobject Main extends App {\n  val dest = Files.createTempDirectory("scala-cli-demo").resolve("hello.txt")\n  val filePath = Files.writeString(dest, "Hello from ScalaCli")\n  val fileContent: String = Files.readString(filePath)\n  println(fileContent)\n}\n'})}),"\n",(0,i.jsxs)(a.p,{children:["To use Java 11 to run this application, pass the following ",(0,i.jsx)(a.code,{children:"--jvm"})," option to the Scala CLI command:"]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-bash",metastring:"ignore",children:"scala-cli --jvm adopt:11 Main.scala\n"})}),"\n",(0,i.jsxs)(a.p,{children:["To attempt to compile the application with Java 8, change the value of the ",(0,i.jsx)(a.code,{children:"--jvm"})," parameter:"]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-bash",metastring:"ignore fail",children:"scala-cli --jvm 8 Main.scala\n# In this case, it raises an error because the `Files.createTempFile` method is not available in java 8\n#\n# Exception in thread main: java.lang.Exception: java.lang.NoSuchMethodError: java.nio.file.Files.writeString(Ljava/nio/file/Path;Ljava/lang/CharSequence;[Ljava/nio/file/OpenOption;)Ljava/nio/file/Path;\n#     at method print in modules/runner/src/main/scala-3-stable/scala/cli/runner/Stacktrace.scala:12 inside runner_3.jar\n#     at method printException in modules/runner/src/main/scala/scala/cli/runner/StackTracePrinter.scala:91 inside runner_3.jar\n#     at method main in modules/runner/src/main/scala/scala/cli/runner/Runner.scala:22 inside runner_3.jar\n"})})]})}function u(e={}){const{wrapper:a}={...(0,t.a)(),...e.components};return a?(0,i.jsx)(a,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},1151:(e,a,n)=>{n.d(a,{Z:()=>r,a:()=>s});var i=n(7294);const t={},o=i.createContext(t);function s(e){const a=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function r(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),i.createElement(o.Provider,{value:a},e.children)}}}]);