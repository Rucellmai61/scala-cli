"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7448],{247:(e,a,s)=>{s.r(a),s.d(a,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>c,metadata:()=>r,toc:()=>o});var n=s(5893),t=s(1151);const c={title:"Using Scala CLI to run Scala Scripts",sidebar_position:6},i=void 0,r={id:"cookbooks/scala-scripts",title:"Using Scala CLI to run Scala Scripts",description:"Scala Scripts",source:"@site/docs/cookbooks/scala-scripts.md",sourceDirName:"cookbooks",slug:"/cookbooks/scala-scripts",permalink:"/docs/cookbooks/scala-scripts",draft:!1,unlisted:!1,editUrl:"https://github.com/Virtuslab/scala-cli/edit/main/website/docs/cookbooks/scala-scripts.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{title:"Using Scala CLI to run Scala Scripts",sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Filter the test suites to run",permalink:"/docs/cookbooks/test-only"},next:{title:"Scala Scripts with instant startup",permalink:"/docs/cookbooks/instant-startup-scala-scripts"}},l={},o=[{value:"Scala Scripts",id:"scala-scripts",level:2},{value:"Run",id:"run",level:3},{value:"Features",id:"features",level:2},{value:"Package",id:"package",level:3},{value:"Watch mode",id:"watch-mode",level:3}];function d(e){const a={code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,t.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.h2,{id:"scala-scripts",children:"Scala Scripts"}),"\n",(0,n.jsx)(a.p,{children:"Scala scripts are files that contain Scala code without a main method.\nThese source code files don't require build-tool configurations.\nTo run Scala scripts very quickly without waiting the need for build tools, use Scala CLI."}),"\n",(0,n.jsx)(a.h3,{id:"run",children:"Run"}),"\n",(0,n.jsx)(a.p,{children:"For example, given this simple script:"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-scala",metastring:"title=HelloScript.sc",children:'val sv = scala.util.Properties.versionNumberString\n\nval message = s"Hello from Scala ${sv}, Java ${System.getProperty("java.version")}"\nprintln(message)\n'})}),"\n",(0,n.jsx)(a.p,{children:"You can run it directly with Scala CLI \u2014 there's no need for a build tool or additional configuration:"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-bash",children:"scala-cli run HelloScript.sc\n"})}),"\n",(0,n.jsx)(a.p,{children:'Alternatively, you can add a "shebang" header to your script, make it executable, and execute it directly with Scala CLI. For example, given this script with a header that invokes Scala CLI:'}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-scala",metastring:"title=HelloScriptSheBang.sc",children:'#!/usr/bin/env -S scala-cli shebang\n\nval sv = scala.util.Properties.versionNumberString\n\ndef printMessage(): Unit =\n  val message = s"Hello from Scala ${sv}, Java ${System.getProperty("java.version")}"\n  println(message)\n\nprintMessage()\n'})}),"\n",(0,n.jsx)(a.p,{children:"You can make it executable and then run it like this:"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-bash",children:"chmod +x HelloScriptSheBang.sc\n./HelloScriptSheBang.sc\n# Hello from Scala 2.13.6, Java 16.0.1\n"})}),"\n",(0,n.jsx)(a.p,{children:"You can also pass command line arguments to Scala scripts:"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-scala",metastring:"title=ScriptArguments.sc",children:"#!/usr/bin/env -S scala-cli shebang\nprintln(args(1))\n"})}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-bash",children:"chmod +x ScriptArguments.sc\n./ScriptArguments.sc foo bar\n# bar\n"})}),"\n",(0,n.jsxs)(a.p,{children:["As shown, command line arguments are accessed through the special ",(0,n.jsx)(a.code,{children:"args"})," variable."]}),"\n",(0,n.jsx)(a.h2,{id:"features",children:"Features"}),"\n",(0,n.jsx)(a.p,{children:"All of the features shown for non-scripts work for Scala scripts as well, such as waiting for changes (watch mode), dependency menagement, packaging, compiling, etc."}),"\n",(0,n.jsx)(a.h3,{id:"package",children:"Package"}),"\n",(0,n.jsxs)(a.p,{children:["For example, run the ",(0,n.jsx)(a.code,{children:"package"})," sub-command to package your script as a lightweight executable JAR file:"]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-bash",children:"scala-cli --power package HelloScript.sc\n./HelloScript\n"})}),"\n",(0,n.jsx)(a.h3,{id:"watch-mode",children:"Watch mode"}),"\n",(0,n.jsxs)(a.p,{children:["As another example, pass ",(0,n.jsx)(a.code,{children:"--watch"})," to Scala CLI to watch all source files for changes, and then re-run them when there is a change:"]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-bash",metastring:"ignore",children:"scala-cli --watch HelloScript.sc\n"})})]})}function h(e={}){const{wrapper:a}={...(0,t.a)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},1151:(e,a,s)=>{s.d(a,{Z:()=>r,a:()=>i});var n=s(7294);const t={},c=n.createContext(t);function i(e){const a=n.useContext(c);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function r(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),n.createElement(c.Provider,{value:a},e.children)}}}]);